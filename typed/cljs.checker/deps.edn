{:paths ["src"]
 :deps {org.clojure/clojure {:mvn/version "1.10.3"}
        org.typedclojure/typed.clj.checker {:local/root "../clj.checker"
                                            :deps/manifest :deps}
        org.typedclojure/typed.clj.runtime {:local/root "../clj.runtime"
                                            :deps/manifest :deps}
        org.clojure/clojurescript {:mvn/version "1.10.764"}}
 :aliases {:nREPL
           {:extra-paths ["script"]
            :extra-deps
            {nrepl/nrepl {:mvn/version "0.8.3"}
             cider/piggieback {:mvn/version "0.5.2"}}
            :main-opts ["-m" "nrepl.cmdline"
                        "--interactive"]}

           :reply
           {:extra-deps
            {reply/reply {:mvn/version "0.4.1"}}
            :main-opts ["-m" "reply.main"]}

           :start-repl
           {:extra-paths ["script"]
            :extra-deps
            {com.bhauman/rebel-readline {:mvn/version "0.1.4"}}
            :main-opts ["-m" "start-repl"]}

           :clj-1.10.0-beta5 {:override-deps {org.clojure/clojure {:mvn/version "1.10.0-beta5"}}}
           :test
           {:extra-paths ["test"
                          ; for clojure.core.typed.test.common-utils
                          "../checker.jvm/test"
                          "../checker.jvm/test"]
            :extra-deps {;org.clojure/tools.nrepl {:mvn/version "0.2.6"
                         ;                         :exclusions [org.clojure/clojure]}
                         ;org.clojure/core.async {:mvn/version "1.3.610"
                         ;                        :exclusions [org.clojure/tools.analyzer.jvm]}
                         ;org.clojure/tools.trace {:mvn/version "0.7.5"
                         ;                         :exclusions [org.clojure/clojure]}
                         org.clojure/test.check {:mvn/version "1.1.0"}
                         com.gfredericks/test.chuck {:mvn/version "0.2.6"}}}
           :codox
           {:extra-deps {codox/codox {:mvn/version "0.10.7"}}
            :extra-paths ["script"]
            :main-opts ["-m" "gen-doc"]}
           :runner
           {:extra-deps {io.github.cognitect-labs/test-runner
                         {:git/url "https://github.com/cognitect-labs/test-runner"
                          :sha "5557e92c932f024127762ec6007d849bec869c8f"}}
            :main-opts ["-m" "cognitect.test-runner"
                        "-d" "test/clojure/core/typed/test"
                        "-r" ".*"
                        ;"-w" "clojure.test.junit/with-junit-output"
                        ;"-o" "junit-output.xml"
                        ]}}}
